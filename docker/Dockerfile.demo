# SPDX-FileCopyrightText: Copyright (c) 2023-2024 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# See README.md for detailed information.

ARG CONTAINER_VERSION=invalid
FROM ${CONTAINER_VERSION} AS base

# build container
FROM base AS builder

RUN apt-get update \
    && apt-get install -y python3-setuptools \
    && rm -rf /var/lib/apt/lists/*

ADD . /opt/hololink/

# See build.sh for why INSTALL_ENVIRONMENT is here.
ARG INSTALL_ENVIRONMENT=""
RUN cd /opt/hololink/python \
    && $INSTALL_ENVIRONMENT pip3 wheel -v .

# Build C++ tools
RUN apt-get update \
    && apt-get install -y build-essential cmake \
    && rm -rf /var/lib/apt/lists/*

# Build tools with CMake
RUN cd /opt/hololink \
    && mkdir -p build \
    && cd build \
    && cmake -DHOLOLINK_BUILD_ONLY_NATIVE=ON .. \
    && make -j$(nproc) \
    && make install DESTDIR=/opt/hololink/tools

# demo container
FROM base AS demo

RUN python3 -m pip install --upgrade pip
RUN pip3 install pytest

# net-tools gives us the "arp" command
# iputils-ping gives us the "ping" command
RUN apt-get update \
    && apt-get install -y net-tools iputils-ping iproute2 \
    && rm -rf /var/lib/apt/lists/*

RUN apt-get update \
    && apt-get install -y python3-requests python3-yaml \
    && rm -rf /var/lib/apt/lists/*

# install the wheel we build before
COPY --from=builder /opt/hololink/python/hololink-*.whl /tmp/wheel/
RUN WHEEL=$(find /tmp/wheel -type f -name "hololink-*.whl") \
    && pip3 install ${WHEEL}

# Install the C++ tools
COPY --from=builder /opt/hololink/tools/usr/local/ /usr/local/
